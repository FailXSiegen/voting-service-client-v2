FROM node:18-alpine

WORKDIR /app

# Install dependencies including monitoring and diagnostic tools
RUN apk add --no-cache curl tini netcat-openbsd
COPY voting-service-api/package*.json ./
RUN npm install

# Copy source code, health check script and entrypoint
COPY voting-service-api/ ./
COPY docker/local/healthcheck-simplified.js ./healthcheck.js
COPY docker/local/docker-entrypoint.sh /docker-entrypoint.sh
COPY docker/local/scripts/wait-for-it.sh /app/scripts/wait-for-it.sh
RUN chmod +x /app/scripts/wait-for-it.sh

# Build the application
RUN npm run build

# Create directory for logs
RUN mkdir -p /app/logs

# Setup health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD node /app/healthcheck.js consumer

# Use tini as init system to handle signals properly
ENTRYPOINT ["/sbin/tini", "--"]

# Start the consumer service with entrypoint
CMD ["/docker-entrypoint.sh", "node", "dist/bin/start-vote-consumer.js"]